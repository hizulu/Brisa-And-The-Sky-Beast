//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Sara/PlayerMovementScripts/PlayerInputs/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""9b2da817-857d-4868-a840-bcd5c49e330f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3a99e25d-8fa6-4690-8512-c3f86572de99"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""e7a065a5-b758-4a88-98f4-c502f9a5eafb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""a9515b41-7540-40b1-a6fe-9caff9885e7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""fb757200-5dc0-46fa-a35b-2a558263d7bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f3900a09-7f7a-4ae5-9222-14f5ff85bcc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""aa3bdbcf-b408-4806-89fc-86e5ae30a9c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CallBeast"",
                    ""type"": ""Button"",
                    ""id"": ""4d168c82-1217-4b77-a103-a80aa32a1e2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockTarget"",
                    ""type"": ""Button"",
                    ""id"": ""b3f5e0f0-b4c0-4290-9709-e6bdaf03a4c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""a8c875b2-f322-482c-970e-b1f25f84b10e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointedMode"",
                    ""type"": ""Button"",
                    ""id"": ""e54219ef-98c6-4cde-9470-64984ddffff0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveBeast"",
                    ""type"": ""Button"",
                    ""id"": ""c6d88009-4caa-4583-8a3b-a769f363f5ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""e2f29f05-ddfb-43cb-a7dd-0d2335d05dbf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ac019e42-2c32-4170-92c2-aad217c7304d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5500c5e7-eab7-4683-a06d-c18537a6b9e1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0d6ccaac-8b81-4791-8e00-9bd58c171cad"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""66f11fe7-b6d1-466e-a92b-50d9ffe5101a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0e93b4f8-6586-4715-b8a2-533bf674d466"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98214ab6-409c-4dcc-99c0-74d7f0810ee3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""981b78c4-6386-4506-9691-3ebc26ed5abf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef518618-8350-46e1-b95d-2cc954bbd0c7"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e97f52a-81c1-4ec4-b098-8a8d03f39e4c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CallBeast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac048365-26c0-48c2-a4f8-aa6f9cc9c504"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5290682-c168-400f-a37d-eebef6fae8d5"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42928623-eaf1-4126-bc17-65e84c34ac14"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveBeast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebaf2878-f38a-41a9-ba2c-1189999ad43e"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointedMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f686f744-d051-43c4-b9ae-6ad74ffe5dce"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIPanel"",
            ""id"": ""f86092bc-4013-4475-9e86-90db8207e063"",
            ""actions"": [
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""3f4df6f5-ef3b-465e-bb38-69e82a3e41d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUpItem"",
                    ""type"": ""Button"",
                    ""id"": ""cda0200f-4e8a-40ef-b16c-954cc46a48e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BeastPanel"",
                    ""type"": ""Button"",
                    ""id"": ""85ab1cc0-c978-4f57-9853-7aa5b27ee289"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""32592172-a683-4d0c-9ba7-83c051177861"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ClosePanelGeneral"",
                    ""type"": ""Button"",
                    ""id"": ""c0d61bf3-9bce-4cd6-bccb-97c4eb4aaf30"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""0599d1d1-af9c-4b39-9ba8-df7fba8f986b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dialogue"",
                    ""type"": ""Button"",
                    ""id"": ""9fcdc5ab-f76f-42da-84ca-05f156b169f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DialogueContinue"",
                    ""type"": ""Button"",
                    ""id"": ""10cf8fa6-05a1-42b3-80a3-027ee2941a0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f32fa5a6-4503-4439-9043-5ce4ee8947cf"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a245b15f-a760-45c0-b275-4e3e78d5276e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUpItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""661a1a15-4645-4ce7-bc21-e70f1fe7e075"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BeastPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01e87917-9aab-4482-8409-b7624a2f17ad"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96d34b8f-1f3d-47f1-a30d-8fd8a5f58afc"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0683e2ee-bbc3-4441-b8e0-2526845406b0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClosePanelGeneral"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bda17c8-d800-49fa-9979-fca7d996f2ce"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0954906e-d3ef-4bbb-a351-cf9cc7287e4b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DialogueContinue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03743c80-c9d1-4644-8aad-5b37f5acbc8a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DialogueContinue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_CallBeast = m_Player.FindAction("CallBeast", throwIfNotFound: true);
        m_Player_LockTarget = m_Player.FindAction("LockTarget", throwIfNotFound: true);
        m_Player_Heal = m_Player.FindAction("Heal", throwIfNotFound: true);
        m_Player_PointedMode = m_Player.FindAction("PointedMode", throwIfNotFound: true);
        m_Player_MoveBeast = m_Player.FindAction("MoveBeast", throwIfNotFound: true);
        // UIPanel
        m_UIPanel = asset.FindActionMap("UIPanel", throwIfNotFound: true);
        m_UIPanel_Inventory = m_UIPanel.FindAction("Inventory", throwIfNotFound: true);
        m_UIPanel_PickUpItem = m_UIPanel.FindAction("PickUpItem", throwIfNotFound: true);
        m_UIPanel_BeastPanel = m_UIPanel.FindAction("BeastPanel", throwIfNotFound: true);
        m_UIPanel_PauseGame = m_UIPanel.FindAction("PauseGame", throwIfNotFound: true);
        m_UIPanel_ClosePanelGeneral = m_UIPanel.FindAction("ClosePanelGeneral", throwIfNotFound: true);
        m_UIPanel_Map = m_UIPanel.FindAction("Map", throwIfNotFound: true);
        m_UIPanel_Dialogue = m_UIPanel.FindAction("Dialogue", throwIfNotFound: true);
        m_UIPanel_DialogueContinue = m_UIPanel.FindAction("DialogueContinue", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_CallBeast;
    private readonly InputAction m_Player_LockTarget;
    private readonly InputAction m_Player_Heal;
    private readonly InputAction m_Player_PointedMode;
    private readonly InputAction m_Player_MoveBeast;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @CallBeast => m_Wrapper.m_Player_CallBeast;
        public InputAction @LockTarget => m_Wrapper.m_Player_LockTarget;
        public InputAction @Heal => m_Wrapper.m_Player_Heal;
        public InputAction @PointedMode => m_Wrapper.m_Player_PointedMode;
        public InputAction @MoveBeast => m_Wrapper.m_Player_MoveBeast;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @CallBeast.started += instance.OnCallBeast;
            @CallBeast.performed += instance.OnCallBeast;
            @CallBeast.canceled += instance.OnCallBeast;
            @LockTarget.started += instance.OnLockTarget;
            @LockTarget.performed += instance.OnLockTarget;
            @LockTarget.canceled += instance.OnLockTarget;
            @Heal.started += instance.OnHeal;
            @Heal.performed += instance.OnHeal;
            @Heal.canceled += instance.OnHeal;
            @PointedMode.started += instance.OnPointedMode;
            @PointedMode.performed += instance.OnPointedMode;
            @PointedMode.canceled += instance.OnPointedMode;
            @MoveBeast.started += instance.OnMoveBeast;
            @MoveBeast.performed += instance.OnMoveBeast;
            @MoveBeast.canceled += instance.OnMoveBeast;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @CallBeast.started -= instance.OnCallBeast;
            @CallBeast.performed -= instance.OnCallBeast;
            @CallBeast.canceled -= instance.OnCallBeast;
            @LockTarget.started -= instance.OnLockTarget;
            @LockTarget.performed -= instance.OnLockTarget;
            @LockTarget.canceled -= instance.OnLockTarget;
            @Heal.started -= instance.OnHeal;
            @Heal.performed -= instance.OnHeal;
            @Heal.canceled -= instance.OnHeal;
            @PointedMode.started -= instance.OnPointedMode;
            @PointedMode.performed -= instance.OnPointedMode;
            @PointedMode.canceled -= instance.OnPointedMode;
            @MoveBeast.started -= instance.OnMoveBeast;
            @MoveBeast.performed -= instance.OnMoveBeast;
            @MoveBeast.canceled -= instance.OnMoveBeast;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UIPanel
    private readonly InputActionMap m_UIPanel;
    private List<IUIPanelActions> m_UIPanelActionsCallbackInterfaces = new List<IUIPanelActions>();
    private readonly InputAction m_UIPanel_Inventory;
    private readonly InputAction m_UIPanel_PickUpItem;
    private readonly InputAction m_UIPanel_BeastPanel;
    private readonly InputAction m_UIPanel_PauseGame;
    private readonly InputAction m_UIPanel_ClosePanelGeneral;
    private readonly InputAction m_UIPanel_Map;
    private readonly InputAction m_UIPanel_Dialogue;
    private readonly InputAction m_UIPanel_DialogueContinue;
    public struct UIPanelActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIPanelActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Inventory => m_Wrapper.m_UIPanel_Inventory;
        public InputAction @PickUpItem => m_Wrapper.m_UIPanel_PickUpItem;
        public InputAction @BeastPanel => m_Wrapper.m_UIPanel_BeastPanel;
        public InputAction @PauseGame => m_Wrapper.m_UIPanel_PauseGame;
        public InputAction @ClosePanelGeneral => m_Wrapper.m_UIPanel_ClosePanelGeneral;
        public InputAction @Map => m_Wrapper.m_UIPanel_Map;
        public InputAction @Dialogue => m_Wrapper.m_UIPanel_Dialogue;
        public InputAction @DialogueContinue => m_Wrapper.m_UIPanel_DialogueContinue;
        public InputActionMap Get() { return m_Wrapper.m_UIPanel; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIPanelActions set) { return set.Get(); }
        public void AddCallbacks(IUIPanelActions instance)
        {
            if (instance == null || m_Wrapper.m_UIPanelActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIPanelActionsCallbackInterfaces.Add(instance);
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @PickUpItem.started += instance.OnPickUpItem;
            @PickUpItem.performed += instance.OnPickUpItem;
            @PickUpItem.canceled += instance.OnPickUpItem;
            @BeastPanel.started += instance.OnBeastPanel;
            @BeastPanel.performed += instance.OnBeastPanel;
            @BeastPanel.canceled += instance.OnBeastPanel;
            @PauseGame.started += instance.OnPauseGame;
            @PauseGame.performed += instance.OnPauseGame;
            @PauseGame.canceled += instance.OnPauseGame;
            @ClosePanelGeneral.started += instance.OnClosePanelGeneral;
            @ClosePanelGeneral.performed += instance.OnClosePanelGeneral;
            @ClosePanelGeneral.canceled += instance.OnClosePanelGeneral;
            @Map.started += instance.OnMap;
            @Map.performed += instance.OnMap;
            @Map.canceled += instance.OnMap;
            @Dialogue.started += instance.OnDialogue;
            @Dialogue.performed += instance.OnDialogue;
            @Dialogue.canceled += instance.OnDialogue;
            @DialogueContinue.started += instance.OnDialogueContinue;
            @DialogueContinue.performed += instance.OnDialogueContinue;
            @DialogueContinue.canceled += instance.OnDialogueContinue;
        }

        private void UnregisterCallbacks(IUIPanelActions instance)
        {
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @PickUpItem.started -= instance.OnPickUpItem;
            @PickUpItem.performed -= instance.OnPickUpItem;
            @PickUpItem.canceled -= instance.OnPickUpItem;
            @BeastPanel.started -= instance.OnBeastPanel;
            @BeastPanel.performed -= instance.OnBeastPanel;
            @BeastPanel.canceled -= instance.OnBeastPanel;
            @PauseGame.started -= instance.OnPauseGame;
            @PauseGame.performed -= instance.OnPauseGame;
            @PauseGame.canceled -= instance.OnPauseGame;
            @ClosePanelGeneral.started -= instance.OnClosePanelGeneral;
            @ClosePanelGeneral.performed -= instance.OnClosePanelGeneral;
            @ClosePanelGeneral.canceled -= instance.OnClosePanelGeneral;
            @Map.started -= instance.OnMap;
            @Map.performed -= instance.OnMap;
            @Map.canceled -= instance.OnMap;
            @Dialogue.started -= instance.OnDialogue;
            @Dialogue.performed -= instance.OnDialogue;
            @Dialogue.canceled -= instance.OnDialogue;
            @DialogueContinue.started -= instance.OnDialogueContinue;
            @DialogueContinue.performed -= instance.OnDialogueContinue;
            @DialogueContinue.canceled -= instance.OnDialogueContinue;
        }

        public void RemoveCallbacks(IUIPanelActions instance)
        {
            if (m_Wrapper.m_UIPanelActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIPanelActions instance)
        {
            foreach (var item in m_Wrapper.m_UIPanelActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIPanelActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIPanelActions @UIPanel => new UIPanelActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnCallBeast(InputAction.CallbackContext context);
        void OnLockTarget(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
        void OnPointedMode(InputAction.CallbackContext context);
        void OnMoveBeast(InputAction.CallbackContext context);
    }
    public interface IUIPanelActions
    {
        void OnInventory(InputAction.CallbackContext context);
        void OnPickUpItem(InputAction.CallbackContext context);
        void OnBeastPanel(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
        void OnClosePanelGeneral(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
        void OnDialogue(InputAction.CallbackContext context);
        void OnDialogueContinue(InputAction.CallbackContext context);
    }
}
